@model PFSoftware.Inventio.Models.Sale

@{
    ViewData["Title"] = "Create";
}

<h2>Create</h2>

<h4>Sale</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Tax" class="control-label"></label>
                <input asp-for="Tax" class="form-control" />
                <span asp-validation-for="Tax" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div class="row input-group">
                    <input type="text" name="search" id="search" class="form-control" />
                    <div class="input-group-btn">
                        <input type="submit" value="Search" class="btn btn-primary" />
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="PaymentMethod" class="control-label"></label>
                <select asp-for="Id"
                        class="form-control"
                               asp-items="@(new SelectList(ViewBag.Methods, "Id", "Name"))"></select>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts
{
<script>
    $(function () {
        var options = {

            url: function (search) {
                console.log("Data is " + search);
                return "product/GetAutoCompleteResult";
            },

            getValue: function (element) {
                return element.description;
            },
            template: {
            type: "description",
                fields: {
                    description: "code",

                }
            },
            list: {
                maxNumberOfElements: 8,
                match: {
                    enabled: false
                },
                sort: {
                    enabled: true
                }
            },

            ajaxSettings: {
                dataType: "json",
                method: "POST",
                data: {
                    dataType: "json"
                }
            },

            preparePostData: function (data) {
                data.search = $("#search").val();
                console.log(data.search);
                return data;
            },

            requestDelay: 400
        };

        $("#search").easyAutocomplete(options);
    });
</script>
 }